# git describe --tags $(git rev-list --tags --max-count=1)

# This workflow will build the java project and deploys it.

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD to main

on:
  pull_request:
    types:
      - closed
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'checkstyle.xml'


jobs:
  publish_if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 # Required for the release plugin to work correctly

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Get version
        id: get_version
        run: |
          if [[ $(git rev-list --tags --max-count=1) ]]; then
            LATEST_TAG=$(git describe --tags --abbrev=0)
          else
            LATEST_TAG="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          fi
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: mvn --no-transfer-progress -B package --file pom.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Update version
        run: | 
          mvn build-helper:parse-version versions:set -DnewVersion=0.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit

      - name: Publish package
        run: mvn --no-transfer-progress --batch-mode deploy -P github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-username: ${{ secrets.MAVEN_CENTRAL_REPO_PORTAL_USERNAME }}
          server-password: $${{ secrets.MAVEN_CENTRAL_REPO_PORTAL_PASSWORD }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_SIGNING_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Configure Git user for release
        run: |
          git config --global user.name 'crittje-zerofifty'
          git config --global user.email 'crittje-zerofifty@users.noreply.github.com'

      - name: Release with Maven
        env:
          MAVEN_CENTRAL_REPO_PORTAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_REPO_PORTAL_USERNAME }}
          MAVEN_CENTRAL_REPO_PORTAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_REPO_PORTAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: |
          mvn --no-transfer-progress -B clean deploy -P release

      - name: Update Git Tag
        run: |
          git tag "$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          git push origin "$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
