# git describe --tags $(git rev-list --tags --max-count=1)

# This workflow will build the java project and deploys it.

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD to main

on:
  pull_request:
    types:
      - closed
    branches: [ "main" ]


jobs:
  publish_if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 # Required for the release plugin to work correctly

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish package
        run: mvn --batch-mode deploy -P github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


## todo for mvn central
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: maven
#          server-id: ossrh # Matches the distributionManagement in pom.xml
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
#          gpg-passphrase: MAVEN_GPG_PASSPHRASE
#      - name: Configure Git user for release
#        run: |
#          git config --global user.name 'crittje-zerofifty'
#          git config --global user.email 'crittje-zerofifty@users.noreply.github.com'
#
#      - name: Release with Maven
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#        run: |
#          mvn -B release:prepare release:perform -Darguments="-Dgpg.passphrase=$MAVEN_GPG_PASSPHRASE"

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
